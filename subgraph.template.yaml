specVersion: 0.0.4
description: Cryptex Graph
repository: https://github.com/cryptexfinance/tcap-graph
schema:
  file: ./schema.graphql
dataSources:
  # Vaults  
  - kind: ethereum/contract
    name: DAIVault
    network: {{network}}
    source:
      address: "{{daivault-address}}"
      abi: ERC20Vault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: ERC20Vault
          file: ./abis/ERC20Vault.json
        - name: HardDAIVault
          file: ./abis/HardDAIVault.json  
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/ercvault.ts
  - kind: ethereum/contract
    name: DAIState
    network: {{network}}
    source:
      address: "{{daivault-address}}"
      abi: ERC20Vault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: ERC20Vault
          file: ./abis/ERC20Vault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: NewRewardHandler(indexed address,address)
          handler: handleNewRewardHandler
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: ETHVault
    network: {{network}}
    source:
      address: "{{ethvault-address}}"
      abi: ETHVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: ETHVault
          file: ./abis/ETHVault.json
        - name: HardETHVault
          file: ./abis/HardETHVault.json  
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/ethvault.ts
  - kind: ethereum/contract
    name: ETHState
    network: {{network}}
    source:
      address: "{{ethvault-address}}"
      abi: ETHVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: ETHVault
          file: ./abis/ETHVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: NewRewardHandler(indexed address,address)
          handler: handleNewRewardHandler
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: AAVEVault
    network: {{network}}
    source:
      address: "{{aavevault-address}}"
      abi: AAVEVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: AAVEVault
          file: ./abis/AAVEVault.json
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/aavevault.ts
  - kind: ethereum/contract
    name: AAVEState
    network: {{network}}
    source:
      address: "{{aavevault-address}}"
      abi: AAVEVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: AAVEVault
          file: ./abis/AAVEVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts     
  - kind: ethereum/contract
    name: LINKVault
    network: {{network}}
    source:
      address: "{{linkvault-address}}"
      abi: LINKVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: LINKVault
          file: ./abis/LINKVault.json
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/linkvault.ts   
  - kind: ethereum/contract
    name: LINKState
    network: {{network}}
    source:
      address: "{{linkvault-address}}"
      abi: LINKVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: LINKVault
          file: ./abis/LINKVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: WBTCVault
    network: {{network}}
    source:
      address: "{{wbtcvault-address}}"
      abi: WBTCVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: WBTCVault
          file: ./abis/WBTCVault.json
        - name: HardWBTCVault
          file: ./abis/HardWBTCVault.json  
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/wbtcvault.ts      
  - kind: ethereum/contract
    name: WBTCState
    network: {{network}}
    source:
      address: "{{wbtcvault-address}}"
      abi: WBTCVault
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: WBTCVault
          file: ./abis/WBTCVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  # Hard mode vaults
  - kind: ethereum/contract
    name: HardETHVault
    network: {{network}}
    source:
      address: "{{hard-ethvault-address}}"
      abi: HardETHVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: HardETHVault
          file: ./abis/HardETHVault.json
        - name: ETHVault
          file: ./abis/ETHVault.json    
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/ethvault.ts
  - kind: ethereum/contract
    name: HardETHState
    network: {{network}}
    source:
      address: "{{hard-ethvault-address}}"
      abi: HardETHVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: HardETHVault
          file: ./abis/HardETHVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: HardDAIVault
    network: {{network}}
    source:
      address: "{{hard-daivault-address}}"
      abi: HardDAIVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: HardDAIVault
          file: ./abis/HardDAIVault.json
        - name: ERC20Vault
          file: ./abis/ERC20Vault.json   
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/ercvault.ts
  - kind: ethereum/contract
    name: HardDAIState
    network: {{network}}
    source:
      address: "{{hard-daivault-address}}"
      abi: HardDAIVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: HardDAIVault
          file: ./abis/HardDAIVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: HardUSDCVault
    network: {{network}}
    source:
      address: "{{hard-usdcvault-address}}"
      abi: HardUSDCVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: HardUSDCVault
          file: ./abis/HardUSDCVault.json  
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/usdcvault.ts
  - kind: ethereum/contract
    name: HardUSDCState
    network: {{network}}
    source:
      address: "{{hard-usdcvault-address}}"
      abi: HardUSDCVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: HardUSDCVault
          file: ./abis/HardUSDCVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts
  - kind: ethereum/contract
    name: HardWBTCVault
    network: {{network}}
    source:
      address: "{{hard-wbtcvault-address}}"
      abi: HardWBTCVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: HardWBTCVault
          file: ./abis/HardWBTCVault.json
        - name: WBTCVault
          file: ./abis/WBTCVault.json  
      eventHandlers:
        - event: CollateralAdded(indexed address,indexed uint256,uint256)
          handler: handleCollateralAdded
        - event: TokensBurned(indexed address,indexed uint256,uint256)
          handler: handleTokensBurned
        - event: VaultCreated(indexed address,indexed uint256)
          handler: handleVaultCreated
        - event: VaultLiquidated(indexed uint256,indexed address,uint256,uint256)
          handler: handleVaultLiquidated
        - event: TokensMinted(indexed address,indexed uint256,uint256)
          handler: handleTokensMinted
        - event: CollateralRemoved(indexed address,indexed uint256,uint256)
          handler: handleCollateralRemoved
      file: ./src/wbtcvault.ts
  - kind: ethereum/contract
    name: HardWBTCState
    network: {{network}}
    source:
      address: "{{hard-wbtcvault-address}}"
      abi: HardWBTCVault
      startBlock: {{hard-start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - State
      abis:
        - name: HardWBTCVault
          file: ./abis/HardWBTCVault.json
      eventHandlers:
        - event: NewBurnFee(indexed address,uint256)
          handler: handleNewBurnFee
        - event: NewLiquidationPenalty(indexed address,uint256)
          handler: handleNewLiquidationPenalty
        - event: NewRatio(indexed address,uint256)
          handler: handleNewRatio
        - event: NewTreasury(indexed address,address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
      file: ./src/state.ts    
  #oracle
  - kind: ethereum/contract
    name: TCAP
    network: {{network}}
    source:
      address: "{{chainlink-oracle-address}}"
      abi: Oracle
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Oracle
      abis:
        - name: Oracle
          file: ./abis/Oracle.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdated
      file: ./src/oracle.ts
      # Governance
  - kind: ethereum/contract
    name: GovernorAlpha
    network: {{network}}
    source:
      address: "{{governor-address}}"
      abi: GovernorAlpha
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/governance.ts
      entities:
        - Delegate
        - TokenHolder
        - Proposal
        - Vote
        - Governance
      abis:
        - name: GovernorAlpha
          file: ./abis/GovernorAlpha.json
      eventHandlers:
        - event: ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)
          handler: handleProposalCreated
        - event: ProposalCanceled(uint256)
          handler: handleProposalCanceled
        - event: ProposalQueued(uint256,uint256)
          handler: handleProposalQueued
        - event: ProposalExecuted(uint256)
          handler: handleProposalExecuted
        - event: VoteCast(address,uint256,bool,uint256)
          handler: handleVoteCast
  - kind: ethereum/contract
    name: Ctx
    network: {{network}}
    source:
      address: "{{ctx-address}}"
      abi: Ctx
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/governance.ts
      entities:
        - Delegate
        - TokenHolder
      abis:
        - name: Ctx
          file: ./abis/Ctx.json
      eventHandlers:
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegateChanged
        - event: DelegateVotesChanged(indexed address,uint256,uint256)
          handler: handleDelegateVotesChanged
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: DelegatorFactory
    network: {{network}}
    source:
      address: "{{delegator-factory-address}}"
      abi: DelegatorFactory
      startBlock: {{start-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/governance.ts
      entities:
        - Delegator
      abis: 
        - name: DelegatorFactory
          file: ./abis/DelegatorFactory.json
      eventHandlers:  
        - event: DelegatorCreated(indexed address,indexed address)
          handler: handleDelegatorCreated
        - event: Staked(indexed address,indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,indexed address,uint256)
          handler: handleWithdrawn
## UniV3
  - kind: ethereum/contract
    name: NonfungiblePositionManager
    network: {{network}}
    source:
      address: "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
      abi: NonfungiblePositionManager
      startBlock: {{univ3-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/univ3.ts
      entities:
        - Position
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleIncreaseLiquidity
        - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
          handler: handleDecreaseLiquidity
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer        
  - kind: ethereum/contract
    name: UniswapV3Staker
    network: {{network}}
    source:
      address: "0xe34139463bA50bD61336E0c446Bd8C0867c6fE65"
      abi: UniswapV3Staker
      startBlock: {{univ3-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/univ3.ts
      entities:
        - Position
        - APR
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: TcapOracle
          file: ./abis/TcapOracle.json
        - name: WethOracle
          file: ./abis/WethOracle.json   
      eventHandlers:
        - event: TokenStaked(indexed uint256,indexed bytes32,uint128)
          handler: handleTokenStaked
        - event: TokenUnstaked(indexed uint256,indexed bytes32)
          handler: handleTokenUnstaked
  - kind: ethereum/contract
    name: UniswapV3Pool
    network: {{network}}
    source:
      address: "{{pool-address}}"
      abi: Pool
      startBlock: {{univ3-block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/univ3.ts
      entities:
        - Position
        - APR
      abis:
        - name: NonfungiblePositionManager
          file: ./abis/NonfungiblePositionManager.json
        - name: UniswapV3Staker
          file: ./abis/UniswapV3Staker.json
        - name: Pool
          file: ./abis/Pool.json
        - name: Factory
          file: ./abis/factory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: TcapOracle
          file: ./abis/TcapOracle.json
        - name: WethOracle
          file: ./abis/WethOracle.json   
      eventHandlers:
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap